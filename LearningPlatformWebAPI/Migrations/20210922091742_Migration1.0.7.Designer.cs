// <auto-generated />
using System;
using LearningPlatformWebAPI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NodaTime;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace LearningPlatformWebAPI.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20210922091742_Migration1.0.7")]
    partial class Migration107
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("ClassroomUser", b =>
                {
                    b.Property<Guid>("ClassroomsGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ParticipantsGuid")
                        .HasColumnType("uuid");

                    b.HasKey("ClassroomsGuid", "ParticipantsGuid");

                    b.HasIndex("ParticipantsGuid");

                    b.ToTable("ClassroomUser");
                });

            modelBuilder.Entity("LearningPlatformWebAPI.Database.Models.Classroom", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("Capacity")
                        .HasColumnType("integer");

                    b.Property<LocalDateTime>("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<LocalDateTime?>("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<LocalDateTime>("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Guid");

                    b.ToTable("Classrooms");
                });

            modelBuilder.Entity("LearningPlatformWebAPI.Database.Models.Course", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClassroomGuid")
                        .HasColumnType("uuid");

                    b.Property<LocalDateTime>("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<string>("DayOfWeek")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<LocalDateTime?>("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<int>("Duration")
                        .HasColumnType("integer");

                    b.Property<LocalTime?>("EndTime")
                        .IsRequired()
                        .HasColumnType("time");

                    b.Property<string>("MeetingUrl")
                        .HasColumnType("text");

                    b.Property<LocalTime>("StartTime")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<LocalDateTime>("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.Property<LocalDate?>("ValidAfter")
                        .HasColumnType("date");

                    b.Property<LocalDate?>("ValidUntil")
                        .HasColumnType("date");

                    b.HasKey("Guid");

                    b.HasIndex("ClassroomGuid");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("LearningPlatformWebAPI.Database.Models.Exam", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClassroomGuid")
                        .HasColumnType("uuid");

                    b.Property<LocalDateTime>("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("CreatedByGuid")
                        .HasColumnType("uuid");

                    b.Property<LocalDateTime?>("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<LocalDateTime>("End")
                        .HasColumnType("timestamp");

                    b.Property<LocalDateTime>("Start")
                        .HasColumnType("timestamp");

                    b.Property<LocalDateTime>("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Guid");

                    b.HasIndex("ClassroomGuid");

                    b.HasIndex("CreatedByGuid");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("LearningPlatformWebAPI.Database.Models.Question", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<LocalDateTime>("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<LocalDateTime?>("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid?>("ExamGuid")
                        .HasColumnType("uuid");

                    b.Property<int?>("Grade")
                        .HasColumnType("integer");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<LocalDateTime>("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Guid");

                    b.HasIndex("ExamGuid");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("LearningPlatformWebAPI.Database.Models.QuestionChoice", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<LocalDateTime>("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<LocalDateTime?>("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsTrue")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("QuestionGuid")
                        .HasColumnType("uuid");

                    b.Property<LocalDateTime>("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Guid");

                    b.HasIndex("QuestionGuid");

                    b.ToTable("QuestionChoices");
                });

            modelBuilder.Entity("LearningPlatformWebAPI.Database.Models.User", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<LocalDateTime>("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<LocalDateTime?>("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<LocalDateTime>("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Guid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LearningPlatformWebAPI.Database.Models.UserRole", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<LocalDateTime>("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<LocalDateTime?>("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int[]>("Permissions")
                        .HasColumnType("integer[]");

                    b.Property<LocalDateTime>("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Guid");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("UserUserRole", b =>
                {
                    b.Property<Guid>("RolesGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsersGuid")
                        .HasColumnType("uuid");

                    b.HasKey("RolesGuid", "UsersGuid");

                    b.HasIndex("UsersGuid");

                    b.ToTable("UserUserRole");
                });

            modelBuilder.Entity("ClassroomUser", b =>
                {
                    b.HasOne("LearningPlatformWebAPI.Database.Models.Classroom", null)
                        .WithMany()
                        .HasForeignKey("ClassroomsGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LearningPlatformWebAPI.Database.Models.User", null)
                        .WithMany()
                        .HasForeignKey("ParticipantsGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LearningPlatformWebAPI.Database.Models.Course", b =>
                {
                    b.HasOne("LearningPlatformWebAPI.Database.Models.Classroom", "Classroom")
                        .WithMany("Courses")
                        .HasForeignKey("ClassroomGuid");

                    b.Navigation("Classroom");
                });

            modelBuilder.Entity("LearningPlatformWebAPI.Database.Models.Exam", b =>
                {
                    b.HasOne("LearningPlatformWebAPI.Database.Models.Classroom", "Classroom")
                        .WithMany("Exams")
                        .HasForeignKey("ClassroomGuid");

                    b.HasOne("LearningPlatformWebAPI.Database.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedByGuid");

                    b.Navigation("Classroom");

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("LearningPlatformWebAPI.Database.Models.Question", b =>
                {
                    b.HasOne("LearningPlatformWebAPI.Database.Models.Exam", null)
                        .WithMany("Questions")
                        .HasForeignKey("ExamGuid");
                });

            modelBuilder.Entity("LearningPlatformWebAPI.Database.Models.QuestionChoice", b =>
                {
                    b.HasOne("LearningPlatformWebAPI.Database.Models.Question", null)
                        .WithMany("Options")
                        .HasForeignKey("QuestionGuid");
                });

            modelBuilder.Entity("UserUserRole", b =>
                {
                    b.HasOne("LearningPlatformWebAPI.Database.Models.UserRole", null)
                        .WithMany()
                        .HasForeignKey("RolesGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LearningPlatformWebAPI.Database.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LearningPlatformWebAPI.Database.Models.Classroom", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Exams");
                });

            modelBuilder.Entity("LearningPlatformWebAPI.Database.Models.Exam", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("LearningPlatformWebAPI.Database.Models.Question", b =>
                {
                    b.Navigation("Options");
                });
#pragma warning restore 612, 618
        }
    }
}
